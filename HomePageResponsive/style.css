@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&family=Roboto:wght@400;700&display=swap');

/*  resets  */

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;/*this signifies that the height/width of the body that is set
    includes padding and margin as well. 
    your mentioned height = actual-height + padding + margin   */
    
}

/*Let's create some css variables */

:root{

    --primary-text-color: #183b56;/*our default text-color*/
    --secondary-text-color: #577592;
    --accent-color: #2294ed;
    --accent-color-dark: #1d69a3;
    --padding-inline-section: 20px;

}

body{
   /*Let's set the default styling of our body unless/until stated otherwise   */
    font-family: 'Poppins', sans-serif;
    color: var(--primary-text-color);

}

h1{
    font-size: 3rem;
}

h2{
    font-size: 2rem;
}

h3{
    font-size: 1.5rem;
}

p{
    font-family: 'Roboto', sans-serif;/*In case if Roboto does not work , we want sans-serif */
    font-size: 1.25rem;
    color: var(--secondary-text-color);
    line-height: 1.8rem;/* to set the distance between lines of text.*/

}

a{
     text-decoration: none;
     display: inline-block;
}

ul{
    list-style: none;
}

/* our utility classes that will be used in many sections*/

.small-bold-text{
    font-size: 1rem;
    font-weight: 700;
}

.container{

    max-width: 1180px;
    margin-inline: auto;/*to place it in center*/
    padding-inline: var(--padding-inline-section);
    overflow: hidden;/*to avoid white-space on 
    contraction*/

}

.flex{

    display: flex;/*As we know that by default the flex direction is row-wise so, logo and
    menu will get alligned row-wise */
    align-items: center;
}

.hover-link{
    color: var(--primary-text-color);
    transition: 0.2s ease-out;
}

.hover-link:hover{
    color: var(--accent-color);
}

.primary-button{
    background-color: var(--accent-color);
    border-radius: 6px;
    font-weight: 700;
    color: white !important;/* we want this
    button's color to be white always*/
    padding: 12px 24px;
    box-shadow: 0 0 2px var(--secondary-text-color);
    transition: 0.2s ease-out;
    text-align: center;

}

.primary-button:hover{
    background-color: var(--accent-color-dark);
}

.secondary-button{
    border: 0.5px solid var(--secondary-text-color);
    border-radius: 6px;
    font-weight: 700;
    color: var(--primary-text-color) !important;
    padding: 12px 24px;
    transition: 0.2s ease-out;

}

.secondary-button:hover{
    border-color: var(--accent-color);
    color: var(--accent-color) !important;
}


/* top banner   */

.top-banner{
    background-color: #4fb3d4;
}

.banner-text{

    color: white;
    padding: 15px 30px;
    text-align: center;

}

/*nav bar*/

.main-nav{/*It has already become a flex-box so it can be flexbox properties */
    margin-top: 20px;
    justify-content: space-between;
    position: relative;
    
}

.company-logo img{
    width: 200px;
}

.nav-links{
    flex-basis: 730px;/* assign size to our flex box containing nav-links*/
}

.nav-links ul{
    justify-content: end;/* we want them to be alligned in right side */
    gap: 40px;
}

.nav-toggle{/* we do not want the hamburger icon to be
visible all the time */
    display: none;

}

/* header section */

header{
    padding: 50px var(--padding-inline-section) 0;
}

.header-section{
    justify-content: center;
    gap: 50px;
}

.header-left{
    max-width: 40vw;
}

.header-left h1{
    margin-top: 20px;
}

.header-right img{
    width: 100%;/*we want the image to take full width
    of its container, hardcoding a width will make it
    overflow in case the screen size gets reduced */

}

.get-started-btn{
    margin-top: 20px;
}

/* companies section*/

.companies-header{
    text-align: center;
    margin-top: 30px;
    margin-bottom: 30px;
    color: var(--primary-text-color);
}

.logos{
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: 20px;
}

.logo{
    height: 46px;
}

/*features-section*/

.features-section{
    padding: 80px var(--padding-inline-section) 0;
}

.features-header{
    text-align: center;
    margin-bottom: 40px;
}

.features-heading-text{
    margin-bottom: 20px;
}

.features-area{
    /*we want the features-card to
    get wrapped when required */
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 20px;
    margin-top: 20px;

}

.features-card{
    flex-direction: column;
    gap: 20px;
    max-width: 30%;/*each card will 
    take the width of 30% */
    text-align: center;

}

/* big-feature-section */

.big-feature-section{

    padding: 30px var(--padding-inline-section) 0;

}

.big-feature-container{
    gap: 30px;
}

#second-big-feature{
    flex-direction: row-reverse;
}

.feature-img img{
    width: 100%;
}

.feature-desc{

    flex-direction: column;
    align-items: flex-start;/*we want the content 
    to start from the left side of its parent
    container */

}

/* examples section */

.examples-section{

    padding: 80px var(--padding-inline-section);

}

.examples-header{
    flex-direction: column;
    gap: 20px;
    text-align: center;
}

.examples-card{
    width: 23%;
    position: relative;
    height: 300px;
    background: black;
    background-image: linear-gradient(rgb(0, 0, 0, 0.1),
    rgb(0, 0, 0, 0.8)),url(./assets/asset\ 36.jpeg);
    background-size: cover;
    transition: 0.2s ease-out;

}

.examples-card:hover{

    box-shadow: 0 0 10px #888;

}

.examples-area{

    justify-content: space-between;
    margin-top: 30px;
    margin-bottom: 30px;
    flex-wrap: wrap;/* we want it to get wrapped when
    required */

}

/*To assign different anchor tags different background
images , we can use nth-child pseudo selectors  */

.examples-card:nth-child(2){

    background-image: linear-gradient(rgb(0, 0, 0, 0.1),
    rgb(0, 0, 0, 0.8)),url(./assets/asset\ 37.jpeg);
    background-size: cover;

}

.examples-card:nth-child(3){

    background-image: linear-gradient(rgb(0, 0, 0, 0.1),
    rgb(0, 0, 0, 0.8)),url(./assets/asset\ 38.jpeg);
    background-size: cover;

}

.examples-card:nth-child(4){

    background-image: linear-gradient(rgb(0, 0, 0, 0.1),
    rgb(0, 0, 0, 0.8)),url(./assets/asset\ 39.jpeg);
    background-size: cover;

}


.card-text{

    position: absolute;
    bottom: 20px;
    left: 20px;
    right: 20px;
    color: white;

}

/* cta-section */

.cta-section-container{
         
    flex-direction: column;
    gap: 30px;
    color: white;
    text-align: center;

}

.cta-section{

    padding: 120px var(--padding-inline-section) 80px;
    background-color: #183b54;
}

.cta-section-container p{
    color: white;
    margin-top: 20px;
}

/* footer */

footer{
    padding-top: 80px;
    padding-bottom: 80px;
    background-color: #ebf2fa;
}

.link-column{

    flex-direction: column;
    align-items: flex-start;
    gap: 20px;

}

.footer-container{

    align-items: flex-start;
    justify-content: space-between;

}

/* subfooter */

.sub-footer {
    background-color: #b9cde4;
    padding: var(--padding-inline-section) ;
}

.subfooter-container{
    justify-content: center;
    gap: 30px;
    flex-wrap: wrap;
}

/* Note that all the media queries will be written 
after the basic css is applied . Also, instead of 
writing it in the same file of the basic css, we would
rather write it into a separate file */












